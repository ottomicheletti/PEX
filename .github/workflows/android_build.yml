name: Build Android APK

on:
  push:
    branches:
      - main # Dispara o workflow em pushes para a branch main
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest # Usa a última versão estável do Ubuntu como ambiente de execução

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Ação para clonar o repositório

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2 # Ação para configurar o Flutter
        with:
          channel: 'stable'
          # flutter-version: '3.x.x' # Opcional: especifique uma versão do Flutter

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Create .env file from Secrets
        if: env.FIREBASE_ANDROID_API_KEY != '' && env.FIREBASE_IOS_API_KEY != ''
        run: |
          echo "FIREBASE_ANDROID_API_KEY=${{ secrets.FIREBASE_ANDROID_API_KEY }}" >> .env
          echo "FIREBASE_ANDROID_APP_ID=${{ secrets.FIREBASE_ANDROID_APP_ID }}" >> .env
          echo "FIREBASE_ANDROID_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_ANDROID_MESSAGING_SENDER_ID }}" >> .env
          echo "FIREBASE_ANDROID_PROJECT_ID=${{ secrets.FIREBASE_ANDROID_PROJECT_ID }}" >> .env
          echo "FIREBASE_ANDROID_STORAGE_BUCKET=${{ secrets.FIREBASE_ANDROID_STORAGE_BUCKET }}" >> .env

          echo "FIREBASE_IOS_API_KEY=${{ secrets.FIREBASE_IOS_API_KEY }}" >> .env
          echo "FIREBASE_IOS_APP_ID=${{ secrets.FIREBASE_IOS_APP_ID }}" >> .env
          echo "FIREBASE_IOS_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_IOS_MESSAGING_SENDER_ID }}" >> .env
          echo "FIREBASE_IOS_PROJECT_ID=${{ secrets.FIREBASE_IOS_PROJECT_ID }}" >> .env
          echo "FIREBASE_IOS_STORAGE_BUCKET=${{ secrets.FIREBASE_IOS_STORAGE_BUCKET }}" >> .env
          echo "FIREBASE_IOS_BUNDLE_ID=${{ secrets.FIREBASE_IOS_BUNDLE_ID }}" >> .env
        env:
          FIREBASE_ANDROID_API_KEY: ${{ secrets.FIREBASE_ANDROID_API_KEY }}
          FIREBASE_ANDROID_APP_ID: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          FIREBASE_ANDROID_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_ANDROID_MESSAGING_SENDER_ID }}
          FIREBASE_ANDROID_PROJECT_ID: ${{ secrets.FIREBASE_ANDROID_PROJECT_ID }}
          FIREBASE_ANDROID_STORAGE_BUCKET: ${{ secrets.FIREBASE_ANDROID_STORAGE_BUCKET }}

          FIREBASE_IOS_API_KEY: ${{ secrets.FIREBASE_IOS_API_KEY }}
          FIREBASE_IOS_APP_ID: ${{ secrets.FIREBASE_IOS_APP_ID }}
          FIREBASE_IOS_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_IOS_MESSAGING_SENDER_ID }}
          FIREBASE_IOS_PROJECT_ID: ${{ secrets.FIREBASE_IOS_PROJECT_ID }}
          FIREBASE_IOS_STORAGE_BUCKET: ${{ secrets.FIREBASE_IOS_STORAGE_BUCKET }}
          FIREBASE_IOS_BUNDLE_ID: ${{ secrets.FIREBASE_IOS_BUNDLE_ID }}

      - name: Build APK release
        run: flutter build apk --release --no-tree-shake-icons

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: agpop # Nome do artefato que será gerado
          path: build/app/outputs/flutter-apk/agpop.apk # Caminho para o APK gerado
          if-no-files-found: error # Falha o passo se o APK não for encontrado
